import torch.optim as optim

class SimpleClassifier(nn.Module):
    def __init__(self, input_dim=4, num_classes=10):
        super().__init__()
        self.fc = nn.Sequential(
            nn.Linear(input_dim, 64),
            nn.ReLU(),
            nn.Linear(64, num_classes)
        )

    def forward(self, x):
        return self.fc(x)

num_classes = len(model.names)
optimizer = optim.SGD(model.parameters(), lr=0.01)
SGDmodel = SimpleClassifier(input_dim=4, optimizer, num_classes=num_classes)
process_video(video_path,SGDmodel, model)
